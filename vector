from gensim.models import Word2Vec
from nltk.tokenize import word_tokenize
import nltk
nltk.download('punkt')

# Sample sentences
sentences = [
    'My name is Gagandeep',
    'Gagandeep lives in new Delhi',
    'Gagandeep loves technology',
]

# Tokenize the sentences
tokenized_sentences = [word_tokenize(sentence.lower()) for sentence in sentences]

# Create Word2Vec model
model = Word2Vec(tokenized_sentences, vector_size=100, window=5, min_count=1, sg=0)

# Get the word vector for a specific word
word_vector = model.wv['gagandeep']

# Find the most similar words to the given word vector
similar_words = model.wv.similar_by_vector(word_vector, topn=1)

# Output the similar word
for word, similarity in similar_words:
    print(f"Word similar to the vector: {word}, Similarity: {similarity}")

# Optional: to demonstrate converting a vector directly to words
vector = model.wv['technology']
similar_words_to_vector = model.wv.similar_by_vector(vector, topn=5)
print("\nWords similar to the vector for 'technology':")
for word, similarity in similar_words_to_vector:
    print(f"{word}: {similarity}")
